#!/bin/sh
# ----------------------------------------------------------------------------
# Velma Start Up Batch script
#
# Required ENV vars:
# ------------------
#   JAVA_HOME - location of a JDK home dir
#
# Optional ENV vars
# -----------------
#   VELMA_HOME - location of Velma's installed home dir
#   VELMA_OPTS - parameters passed to the Java VM when running Velma
#   VELMA_SKIP_RC - flag to disable loading of velmarc files
# ----------------------------------------------------------------------------

if [ -z "${VELMA_SKIP_RC}" ] ; then
    if [ -f /etc/velmarc ] ; then
        . /etc/velmarc
    fi
    if [ -f "$HOME/.velmarc" ] ; then
        . "$HOME/.velmarc"
    fi
fi

# OS specific support.  $var _must_ be set to either true or false.
cygwin=false;
darwin=false;
mingw=false
case "`uname`" in
    CYGWIN*) cygwin=true ;;
    MINGW*) mingw=true;;
    Darwin*) darwin=true 
        if [ -z "${JAVA_VERSION}" ] ; then
            JAVA_VERSION="CurrentJDK"
        fi
        if [ -z "${JAVA_HOME}" ] ; then
            JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Versions/${JAVA_VERSION}/Home
        fi
        ;;
esac

if [ -z "${JAVA_HOME}" ] ; then
  if [ -r /etc/gentoo-release ] ; then
    JAVA_HOME=`java-config --jre-home`
  fi
fi

if [ -z "${VELMA_HOME}" ] ; then
    ## resolve links - $0 may be a link to maven's home
    PRG="$0"

    # need this for relative symlinks
    while [ -h "${PRG}" ] ; do
        ls=`ls -ld "${PRG}"`
        link=`expr "${ls}" : '.*-> \(.*\)$'`
        if expr "${link}" : '/.*' > /dev/null; then
            PRG="${link}"
        else
            PRG="`dirname "${PRG}"`/${link}"
        fi
    done
    saveddir=`pwd`
    VELMA_HOME=`dirname "${PRG}"`/..
    # make it fully qualified
    VELMA_HOME=`cd "${VELMA_HOME}" && pwd`
    cd "${saveddir}"
fi

# For Cygwin, ensure paths are in UNIX format before anything is touched
if ${cygwin} ; then
    [ -n "${VELMA_HOME}" ] &&
        VELMA_HOME=`cygpath --unix "${VELMA_HOME}"`
    [ -n "${JAVA_HOME}" ] &&
        JAVA_HOME=`cygpath --unix "${JAVA_HOME}"`
    [ -n "${CLASSPATH}" ] &&
        CLASSPATH=`cygpath --path --unix "${CLASSPATH}"`
fi

# For Migwn, ensure paths are in UNIX format before anything is touched
if ${mingw} ; then
    [ -n "${VELMA_HOME}" ] &&
        VELMA_HOME="`(cd "${VELMA_HOME}"; pwd)`"
    [ -n "${JAVA_HOME}" ] &&
        JAVA_HOME="`(cd "${JAVA_HOME}"; pwd)`"
fi

if [ -z "${JAVA_HOME}" ]; then
    javaExecutable="`which javac`"
    if [ -n "${javaExecutable}" -a ! "`expr \"${javaExecutable}\" : '\([^ ]*\)'`" = "no" ]; then
        # readlink(1) is not available as standard on Solaris 10.
        readLink=`which readlink`
        if [ ! `expr "${readLink}" : '\([^ ]*\)'` = "no" ]; then
            javaExecutable="`readlink -f \"${javaExecutable}\"`"
            javaHome="`dirname \"${javaExecutable}\"`"
            javaHome=`expr "${javaHome}" : '\(.*\)/bin'`
            JAVA_HOME="${javaHome}"
            export JAVA_HOME
        fi
    fi
fi

if [ -z "${JAVACMD}" ] ; then
    if [ -n "${JAVA_HOME}"  ] ; then
        if [ -x "${JAVA_HOME}/jre/sh/java" ] ; then
          # IBM's JDK on AIX uses strange locations for the executables
          JAVACMD="${JAVA_HOME}/jre/sh/java"
        else
          JAVACMD="${JAVA_HOME}/bin/java"
        fi
    else
        JAVACMD="`which java`"
    fi
fi

if [ ! -x "${JAVACMD}" ] ; then
    echo "Error: JAVA_HOME is not defined correctly."
    echo "  We cannot execute ${JAVACMD}"
    exit 1
fi

if [ -z "${JAVA_HOME}" ] ; then
    echo "Warning: JAVA_HOME environment variable is not set."
fi

LAUNCHER=net.motortalk.development.maven.velma.Boot

# For Cygwin, switch paths to Windows format before running java
if ${cygwin}; then
  [ -n "${VELMA_HOME}" ] &&
    VELMA_HOME=`cygpath --path --windows "${VELMA_HOME}"`
  [ -n "${JAVA_HOME}" ] &&
    JAVA_HOME=`cygpath --path --windows "${JAVA_HOME}"`
  [ -n "${CLASSPATH}" ] &&
    CLASSPATH=`cygpath --path --windows "${CLASSPATH}"`
fi

exec "${JAVACMD}" \
	${VELMA_OPTS} \
	-classpath "${VELMA_HOME}/lib/*:${VELMA_HOME}/classes" \
	-Dvelma.home="${VELMA_HOME}" \
	${LAUNCHER} "$@"
